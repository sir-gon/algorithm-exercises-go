---

name: Go CI Coverage

on: # yamllint disable-line rule:truthy
  push:
    branches: ["main"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: ["main"]
  workflow_dispatch:

env:
  LOG_LEVEL: WARN

jobs:

  build-and-test:
    name: "Go CI Tests Coverage"
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-24.04"]
        go: ["1.23.x"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
        with:
          # Shallow clones should be disabled for a better relevancy of analysis
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: >
          go test -v
          -covermode=atomic
          -coverprofile="coverage.out"
          ./exercises/...

      - name: Coverage
        run: go tool cover -func="coverage.out"

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  codecov:
    name: Upload to Codecov
    runs-on: ubuntu-24.04
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Download coverage artifact
        uses: actions/download-artifact@v5
        with:
          name: coverage-report

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v5
        with:
          files: coverage.out
          token: ${{ secrets.CODECOV_TOKEN }} # required
          verbose: true # optional (default = false)

  sonarqube:
    name: Analyze with SonarQube
    runs-on: ubuntu-24.04
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download coverage artifact
        uses: actions/download-artifact@v5
        with:
          name: coverage-report

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
